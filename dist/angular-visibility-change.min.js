/**
 * Detect window visibility changes in Angular.
 * @version v0.0.1 - 2015-01-31
 * @link https://github.com/stephenkubovic/angular-visibility-change
 * @author Stephen Kubovic <stephen@skbvc.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */!function(){"use strict";var a=angular.module("visibilityChange",[]);a.provider("VisibilityChange",function(){var a="windowBecameVisible",b="windowBecameHidden",c=!0,d=!0,e=function(a){"undefined"!=typeof console.log&&d&&console.log("WindowVisibility:",a)};this.configure=function(d){d=d||{},"boolean"==typeof d.visibleEvent?d.visibleEvent===!1&&(a=!1):"string"==typeof d.visibleEvent&&(a=d.visibleEvent),"boolean"==typeof d.hiddenEvent?d.hiddenEvent===!1&&(a=!1):"string"==typeof d.hiddenEvent&&(b=d.hiddenEvent),d.broadcast===!1&&(c=!0)},this.$get=["$rootScope","$document",function(d,f){var g,h="hidden",i=[],j=[],k=[];if(h in f)g="visibilitychange";else if((h="webkitHidden")in f)g="webkitvisibilitychange";else if((h="mozHidden")in f)g="mozvisibilitychange";else{if(!(h="msHidden"))return void e("visibilitychange not supported in this browser");g="msvisibilitychange"}var l=function(){this[h]?(e("Window became hidden"),n()):(e("Window became visible"),o())},m=function(){for(var a=Array.prototype.slice.call(arguments),b=a.shift(),c=0;c<b.length;c++)b[c].apply(null,a)},n=function(){c&&d.$broadcast(b),m(i,!1),m(k)},o=function(){c&&d.$broadcast(a),m(i,!0),m(k)};return f.on(g,l),{onChange:function(a){i.push(a)},onVisible:function(a){j.push(a)},onHidden:function(a){k.push(a)}}}]})}();